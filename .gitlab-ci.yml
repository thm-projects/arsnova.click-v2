stages:
  - test
  - analyze
  - build
  - deploy

ts_lint:
  stage: test
  tags:
    - nodejs
  script:
    - npm install
    - echo "------------" && echo && echo "Temporary fix Mousetrap Instance Issue" && echo && echo && echo "REMOVE AFTER PACKAGE MAINTAINER HAS MERGED THE FIX" && echo && echo "------------"
    - sed -i "s|import 'mousetrap';|import { MousetrapInstance } from 'mousetrap';|g" "node_modules/angular2-hotkeys/lib/hotkeys.service.d.ts"
    - node_modules/tslint/bin/tslint -c tslint.json -p tsconfig.json

i18n_check:
  stage: test
  tags:
    - meteor
  script:
    - node src/i18n-check.js

npm_test:
  stage: test
  tags:
    - nodejs
    - angular
  artifacts:
    paths:
      - .lcov_output
  script:
    - curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
    - apt-get -y update
    - apt-get -y install --allow-unauthenticated google-chrome-stable
    - npm install
    - echo "------------" && echo && echo "Temporary fix Mousetrap Instance Issue" && echo && echo && echo "REMOVE AFTER PACKAGE MAINTAINER HAS MERGED THE FIX" && echo && echo "------------"
    - sed -i "s|import 'mousetrap';|import { MousetrapInstance } from 'mousetrap';|g" "node_modules/angular2-hotkeys/lib/hotkeys.service.d.ts"
    - npm test

sonarqube:
  stage: analyze
  tags:
    - sonar-cli
  dependencies:
    - npm_test
  only:
    - staging
  script:
    - npm i
    - sonar-scanner -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=https://scm.thm.de/sonar/

build_image:
  stage: build
  only:
    - staging
    - master
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - kaniko
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context     "$CI_PROJECT_DIR"
      --dockerfile  "$CI_PROJECT_DIR/Dockerfile"
      --build-arg   buildCmd="PROD"
      --build-arg   targetUrl="https://antworte.jetzt"
      --build-arg   themes="[\"Material\",\"blackbeauty\"]"
      --build-arg   PUPPETEER_SKIP_CHROMIUM_DOWNLOAD="true"
      --build-arg   CHROMIUM_PATH="/usr/bin/chromium-browser"
      --build-arg   CHROME_BIN="CHROME_BIN"
      --destination "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

deploy:
  stage: deploy
  only:
    - staging
    - master
  tags:
    - ssh
  script:
    - eval $(ssh-agent -s)
    - mkdir ~/.ssh
    - ssh-keyscan "$SERVER_URL" >> ~/.ssh/known_hosts
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - ssh $SSH_CMD "touch ~/deploy_$CI_COMMIT_REF_SLUG"
